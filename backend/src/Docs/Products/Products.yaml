paths:
  /api/products/:
    get:
      summary: Obtener todos los productos
      tags: #Tipos de datos
        - Products
      responses:
        "200":
          description: Productos obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400": #Error al consultar los productos (No se si va)
          description: Error al consultar cliente, ingrese un número válido para las queries.
        "500":
          description: Error al obtener los productos
    post:
      summary: Crear un producto nuevo
      tags:
        - Products
      responses:
        "201":
          description: Producto creado correctamente 
          content:
            application/json:
              schema:
                #type: Creo que no lleva tipo al no traer algo
                items:
                  $ref: "#/components/schemas/Product"
        "403":
          description:  Usuario no autorizado. #Unauthorized user          
        "500":
          description: Error al crear el producto.

  /api/products/{id}:
    get:
      summary: Obtener un producto dado su Id.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id del producto a buscar
          schema:
            type: integer
      responses:
        "200":
          description: Producto obtenido correctamente
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Producto inexistente.
        "500":
          description: Error al obtener el producto.
    put:
      summary: Actualizar un producto
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id del producto a actualizar
          schema:
            type: integer
        - name: body
          in: body
          required: true
          description: Datos del producto a actualizar
          schema:
            type: object
            properties:
              name:
                type: string
                description: Nombre del producto
              description:
                type: string
                description: Descripción del producto
              category:
                type: string
                description: Categoría del producto
              price:
                type: number
                description: Precio del producto
              stock:
                type: number
                description: Stock del producto
              thumbnail:
                type: array
                description: Imagen del producto
              status:
                type: boolean
                description: Estado del producto
              code:
                type: string
                description: Código del producto
      responses:
        "200":
          description: Producto actualizado correctamente
        "403":
          description: Usuario no autorizado. #Unauthorized user
        "500":
          description: Error interno del servidor al actualizar el producto
    delete:
      summary: Eliminar un producto
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Id del producto a eliminar
          schema:
            type: integer
      responses:
        "200":
          description: Producto eliminado correctamente
        "403":
          description: Usuario no autorizado. #Unauthorized user
        "500":
          description: Error interno del servidor al eliminar el producto
